import telebot
from telebot import types
import gspread
from oauth2client.service_account import ServiceAccountCredentials
import qrcode
import cv2
from datetime import datetime
from pyzbar.pyzbar import decode
from pyzbar import pyzbar
import urllib
import os
import time
from PIL import Image


BOT_TOKEN = "5675907613:AAETwaa8fJlZnMF0FmfCO-nrgy-WZwdrKIg"

bot = telebot.TeleBot(BOT_TOKEN)

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ Google –¢–∞–±–ª–∏—Ü—ñ
scope = ['https://spreadsheets.google.com/feeds', 'https://www.googleapis.com/auth/drive']
credentials = ServiceAccountCredentials.from_json_keyfile_name('credentials.json', scope)
client = gspread.authorize(credentials)
# –í—ñ–¥–∫—Ä–∏—Ç—Ç—è –ì—É–≥–ª —Ç–∞–±–ª–∏—Ü—ñ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞
sheet1 = client.open_by_key('1L2_iDAMn8L5mFrZ9iIkOFESOy7VlkWuLED4Gk33JxKo').sheet1

# –û–±—Ä–æ–±–Ω–∏–∫ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ –°—Ç–∞—Ä—Ç
@bot.message_handler(commands=['start'])
def handle_start(message):
    # –¢–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    text = "<b>–Ø —Ç–≤—ñ–π –ø–æ–º—ñ—á–Ω–∏–∫ –≤ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó –≥–æ—Å—Ç–µ–π –Ω–∞ —Ü—å–æ–º—É –∑–∞—Ö–æ–¥—ñ.</b>\n\n"\
           "–©–æ–± –∑–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ —Ü—å–æ–º—É –∑–∞—Ö–æ–¥—ñ, –Ω–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É –°–∫–∞–Ω—É–≤–∞—Ç–∏ QR, –≤—ñ–¥–∫—Ä–∏–π –∫–∞–º–µ—Ä—É —Ç–∞ —Å—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—É–π QR –∫–æ–¥ –≥–æ—Å—Ç—è —Ç–∞ –Ω–∞–¥—ñ–π—à–ª–∏ –π–æ–≥–æ –≤ —Ü–µ–π —á–∞—Ç."

    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏ –∑ –∫–Ω–æ–ø–∫–æ—é "–°–∫–∞–Ω—É–≤–∞—Ç–∏ QR"
    keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    scan_button = types.KeyboardButton("–°–∫–∞–Ω—É–≤–∞—Ç–∏ QR")
    keyboard.add(scan_button)

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    if message.from_user.id == 335223450:
        # –î–æ–¥–∞–≤–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ "–ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ QR" –¥–ª—è –ø–µ–≤–Ω–æ–≥–æ —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        generate_button = types.KeyboardButton("–ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ QR")
        keyboard.add(generate_button)

    # –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –≤–∏–¥—ñ–ª–µ–Ω–∏–º —Ç–µ–∫—Å—Ç–æ–º
    bot.send_message(message.chat.id, text, parse_mode='HTML', reply_markup=keyboard)

def is_user_registered(user_id):
    # –û—Ç—Ä–∏–º–∞–Ω–Ω—è –≤—Å—ñ—Ö –∑–Ω–∞—á–µ–Ω—å –∑ –ø–µ—Ä—à–æ—ó –∫–æ–ª–æ–Ω–∫–∏ –∞—Ä–∫—É—à–∞
    column_values = sheet1.col_values(1)
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ —î Id –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Å–µ—Ä–µ–¥ –∑–Ω–∞—á–µ–Ω—å
    return str(user_id) in column_values

def delete_previous_messages(chat_id, message_id, count=3):
    for _ in range(count):
        try:
            bot.delete_message(chat_id, message_id - 1)
            message_id -= 1
        except Exception as e:
            print(f"–ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")
            break

# –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–°–∫–∞–Ω—É–≤–∞—Ç–∏ QR"
@bot.message_handler(func=lambda message: message.text == '–°–∫–∞–Ω—É–≤–∞—Ç–∏ QR')
def handle_scan_qr_button(message):
    chat_id = message.chat.id
    # –í–∏–¥–∞–ª–µ–Ω–Ω—è –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏
    remove_keyboard = types.ReplyKeyboardRemove()
    bot.send_message(message.chat.id, "–ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å —Ñ–æ—Ç–æ QR-–∫–æ–¥—É –¥–ª—è —Å–∫–∞–Ω—É–≤–∞–Ω–Ω—è.", reply_markup=remove_keyboard)

    # –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è —Ñ–∞–π–ª—É 1.gif —Ä–∞–∑–æ–º –∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º
    gif_path = '1.mp4'
    with open(gif_path, 'rb') as file:
        bot.send_document(chat_id, file)

    # –û—á—ñ–∫—É–≤–∞–Ω–Ω—è —Ñ–æ—Ç–æ –≤—ñ–¥ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    bot.register_next_step_handler(message, process_qr_photo)

# –ú–µ—Ç–æ–¥ –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –æ—Ç—Ä–∏–º–∞–Ω–æ–≥–æ —Ñ–æ—Ç–æ –∑ QR-–∫–æ–¥–æ–º
def process_qr_photo(message):
    chat_id = message.chat.id

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –±—É–ª–æ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ —Ñ–æ—Ç–æ
    if message.photo:
        # –û—Ç—Ä–∏–º–∞–Ω–Ω—è –æ–±'—î–∫—Ç—É —Ñ–æ—Ç–æ
        photo_obj = message.photo[-1]

        # –û—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞ —Ñ–æ—Ç–æ
        photo_id = photo_obj.file_id

        # –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ñ–æ—Ç–æ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –º–µ—Ç–æ–¥—É `download`
        photo_file = bot.get_file(photo_id)
        photo_content = bot.download_file(photo_file.file_path)

        # –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ñ–æ—Ç–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ
        photo_path = f'qr_code_photos/{photo_id}.jpg'
        with open(photo_path, 'wb') as file:
            file.write(photo_content)

        # –í–∏–¥–∞–ª–µ–Ω–Ω—è –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –≤ —á–∞—Ç—ñ
        delete_previous_messages(chat_id, message.message_id)

        # –ê–Ω–∞–ª—ñ–∑ QR-–∫–æ–¥—É
        qr_code_data = scan_qr_code(photo_path)

        if qr_code_data:
            process_qr_code(qr_code_data, chat_id)
        else:
            # –Ø–∫—â–æ QR-–∫–æ–¥ –Ω–µ —Ä–æ–∑–ø—ñ–∑–Ω–∞–Ω–æ, –ø–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
            keyboard = create_keyboard()
            bot.send_message(chat_id, 'üò≠–ü–æ–º–∏–ª–∫–∞: QR-–∫–æ–¥ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –Ω–∞ —Ñ–æ—Ç–æ', reply_markup=keyboard)

        # –í–∏–¥–∞–ª–µ–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω–æ–≥–æ —Ñ–æ—Ç–æ
        os.remove(photo_path)

    else:
        # –í–∏–¥–∞–ª–µ–Ω–Ω—è –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –≤ —á–∞—Ç—ñ
        delete_previous_messages(chat_id, message.message_id)

        # –Ø–∫—â–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–µ –Ω–∞–¥—ñ—Å–ª–∞–≤ —Ñ–æ—Ç–æ, –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
        bot.send_message(chat_id, 'üò≠–ü–æ–º–∏–ª–∫–∞: –ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å —Ñ–æ—Ç–æ –∑ QR-–∫–æ–¥–æ–º –¥–ª—è —Å–∫–∞–Ω—É–≤–∞–Ω–Ω—è.')

    # –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ —Ñ–æ—Ç–æ
    wait_for_qr_photo(chat_id)

# –û–Ω–æ–≤–ª–µ–Ω–∏–π –º–µ—Ç–æ–¥ –¥–ª—è –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è —Ñ–æ—Ç–æ –≤—ñ–¥ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
def wait_for_qr_photo(chat_id):
    # –í–∏–¥–∞–ª–µ–Ω–Ω—è –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏
    remove_keyboard = types.ReplyKeyboardRemove()
    bot.send_message(chat_id, "–ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å –Ω–∞—Å—Ç—É–ø–Ω–µ —Ñ–æ—Ç–æ QR-–∫–æ–¥—É –¥–ª—è —Å–∫–∞–Ω—É–≤–∞–Ω–Ω—è.", reply_markup=remove_keyboard)

    # –û—á—ñ–∫—É–≤–∞–Ω–Ω—è —Ñ–æ—Ç–æ –≤—ñ–¥ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    bot.register_next_step_handler_by_chat_id(chat_id, process_qr_photo)

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
def delete_previous_messages(chat_id, message_id, count=3):
    for _ in range(count):
        try:
            bot.delete_message(chat_id, message_id - 1)
            message_id -= 1
        except Exception as e:
            print(f"–ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")
            break

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏
def create_keyboard():
    keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    scan_button = types.KeyboardButton("–°–∫–∞–Ω—É–≤–∞—Ç–∏ QR")
    keyboard.add(scan_button)
    return keyboard

# –ú–µ—Ç–æ–¥ –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É QR-–∫–æ–¥—É –Ω–∞ —Ñ–æ—Ç–æ
def scan_qr_code(photo_path):
    image = cv2.imread(photo_path)
    qr_codes = decode(image)
    qr_code_data = None

    for qr_code in qr_codes:
        qr_code_data = qr_code.data.decode("utf-8")
        break

    return qr_code_data

def process_qr_code(qr_code_data, chat_id):
    if qr_code_data:
        user_id = qr_code_data
        if is_user_registered(user_id):
            # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–Ω–∞—á–µ–Ω–Ω—è –≤ 5-–º—É —Å—Ç–æ–≤–ø—á–∏–∫—É —Ä—è–¥–∫–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            column_index = 5
            user_row = sheet1.find(str(user_id)).row
            cell_value = sheet1.cell(user_row, column_index).value

            if cell_value:
                # –Ø–∫—â–æ –∑–Ω–∞—á–µ–Ω–Ω—è –≤–∂–µ –ø—Ä–∏—Å—É—Ç–Ω—î, –ø–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ –ø—Ä–æ –∑–∞–±–æ—Ä–æ–Ω—É –ø—Ä–æ—Ö–æ–¥—É
                name, surname, profession = get_user_data(user_id)
                message = f'üö®–ü—Ä–æ—Ö—ñ–¥ –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–æ ‚Äì QR –∫–æ–¥ –≤–∂–µ –±—É–≤ –≤—ñ–¥—Å–∫–∞–Ω–æ–≤–∞–Ω–∏–º\n\n'
                message += f'–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: {surname} {name}\n'
                message += f'–ü—Ä–æ—Ñ–µ—Å—ñ—è: {profession}'
                bot.send_message(chat_id, message)
            else:
                # –ó–∞–ø–∏—Å—É—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –≤ 5-–π —Å—Ç–æ–≤–ø—á–∏–∫ —Ä—è–¥–∫–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                current_datetime = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
                user_row = sheet1.find(str(user_id)).row
                sheet1.update_cell(user_row, column_index, f'Arrived')

                # –í–∏–∫–æ–Ω—É—î–º–æ —ñ–Ω—à—ñ –¥—ñ—ó, —è–∫—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–∫–æ–Ω–∞—Ç–∏ –ø—Ä–∏ —É—Å–ø—ñ—à–Ω–æ–º—É —Å–∫–∞–Ω—É–≤–∞–Ω–Ω—ñ
                name, surname, profession = get_user_data(user_id)
                message = f'‚úÖ–ü—Ä–æ—Ö—ñ–¥ –¥–æ–∑–≤–æ–ª–µ–Ω–æ, –∑–∞—Ñ—ñ–∫—Å–æ–≤–∞–Ω–æ –≤—ñ–¥–≤—ñ–¥—É–≤–∞–Ω–Ω—è –∑–∞—Ö–æ–¥—É\n\n'
                message += f'–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: {surname} {name}\n'
                message += f'–ü—Ä–æ—Ñ–µ—Å—ñ—è: {profession}'
                bot.send_message(chat_id, message)
        else:
            # –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–π, –ø–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
            bot.send_message(chat_id, 'üö®–ü–æ–º–∏–ª–∫–∞: QR-–∫–æ–¥ –Ω–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ –≤ —Å–∏—Å—Ç–µ–º—ñ —Ç–∞ –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–µ –≤—ñ–¥–≤—ñ–¥—É–≤–∞–Ω–Ω—è –∑–∞—Ö–æ–¥—É')
    else:
        # –Ø–∫—â–æ –∫–ª—é—á 'user_id' –≤—ñ–¥—Å—É—Ç–Ω—ñ–π —É qr_code_data, –ø–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
        bot.send_message(chat_id, 'üö®–ü–æ–º–∏–ª–∫–∞: –ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç QR-–∫–æ–¥—É')

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ —Ç–∞–±–ª–∏—Ü—ñ
def get_user_data(user_id):
    # –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä—è–¥–∫–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –π–æ–≥–æ ID
    user_row = sheet1.find(str(user_id)).row

    # –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∑–Ω–∞—á–µ–Ω—å –∑ –ø–æ—Ç—Ä—ñ–±–Ω–∏—Ö —Å—Ç–æ–≤–ø—á–∏–∫—ñ–≤
    name = sheet1.cell(user_row, 2).value
    surname = sheet1.cell(user_row, 3).value
    profession = sheet1.cell(user_row, 4).value

    return name, surname, profession

# –û–Ω–æ–≤–ª–µ–Ω–∏–π –º–µ—Ç–æ–¥ –¥–ª—è –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è —Ñ–æ—Ç–æ –≤—ñ–¥ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
def wait_for_qr_photo(chat_id):
    # –í–∏–¥–∞–ª–µ–Ω–Ω—è –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏
    remove_keyboard = types.ReplyKeyboardRemove()
    bot.send_message(chat_id, "–ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å –Ω–∞—Å—Ç—É–ø–Ω–µ —Ñ–æ—Ç–æ QR-–∫–æ–¥—É –¥–ª—è —Å–∫–∞–Ω—É–≤–∞–Ω–Ω—è.", reply_markup=remove_keyboard)

    # –û—á—ñ–∫—É–≤–∞–Ω–Ω—è —Ñ–æ—Ç–æ –≤—ñ–¥ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    bot.register_next_step_handler_by_chat_id(chat_id, process_qr_photo)


# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–∫–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ "–ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ QR"
@bot.message_handler(func=lambda message: message.text == "–ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ QR")
def generate_qr_button_handler(message):
    generate_images()
    bot.reply_to(message, "–í—Å—ñ QR-–∫–æ–¥–∏ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ.")

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –ø–∞–ø–∫–∏ "qr_code_photos"
if not os.path.exists("qr_code_photos"):
    os.makedirs("qr_code_photos")

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ Google Sheets
def load_user_data():

    # –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∑–Ω–∞—á–µ–Ω—å –∑ –ø–µ—Ä—à–æ—ó –∫–æ–ª–æ–Ω–∫–∏ (ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤)
    id_values = sheet1.col_values(1)

    # –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∑–Ω–∞—á–µ–Ω—å –∑ —ñ–Ω—à–∏—Ö –∫–æ–ª–æ–Ω–æ–∫ (—ñ–Ω—à—ñ –¥–∞–Ω—ñ –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤)
    name_values = sheet1.col_values(2)
    last_name_values = sheet1.col_values(3)

    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É —Å–ª–æ–≤–Ω–∏–∫—ñ–≤ –∑ –¥–∞–Ω–∏–º–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
    user_data = []
    for i in range(1, len(id_values)):
        user_data.append({
            "id": id_values[i],
            "first_name": name_values[i],
            "last_name": last_name_values[i]
        })

    return user_data

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó QR-–∫–æ–¥—É –∑ –ª–æ–≥–æ—Ç–∏–ø–æ–º
def generate_qr_code(user_id, first_name, last_name):
    qr_data = f"{user_id}"
    qr = qrcode.QRCode(
        version=1,
        error_correction=qrcode.constants.ERROR_CORRECT_H,
        box_size=10,
        border=4,
    )
    qr.add_data(qr_data)
    qr.make(fit=True)

    qr_img = qr.make_image(fill_color="black", back_color="white")
    qr_img = qr_img.resize((450, 450))  # –ó–º—ñ–Ω–∞ —Ä–æ–∑–º—ñ—Ä—É QR-–∫–æ–¥—É

    # –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ª–æ–≥–æ—Ç–∏–ø—É
    logo_path = os.path.join(os.getcwd(), "logo.png")
    logo = Image.open(logo_path)
    logo = logo.resize((225, 165))  # –ó–º—ñ–Ω–∞ —Ä–æ–∑–º—ñ—Ä—É –ª–æ–≥–æ—Ç–∏–ø—É

    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑ –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏–º–∏ —Ä–æ–∑–º—ñ—Ä–∞–º–∏
    image_width = 500
    image_height = 750
    new_image = Image.new("RGBA", (image_width, image_height), "white")

    # –†–æ–∑–º—ñ—â–µ–Ω–Ω—è QR-–∫–æ–¥—É —É –≤–µ—Ä—Ö–Ω—ñ–π —á–∞—Å—Ç–∏–Ω—ñ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
    qr_x = int((image_width - qr_img.width) / 2)
    qr_y = 25
    new_image.paste(qr_img, (qr_x, qr_y))

    # –†–æ–∑–º—ñ—â–µ–Ω–Ω—è –ª–æ–≥–æ—Ç–∏–ø—É —É –Ω–∏–∂–Ω—ñ–π —á–∞—Å—Ç–∏–Ω—ñ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
    logo_x = int((image_width - logo.width) / 2)
    logo_y = image_height - logo.height - 75
    new_image.paste(logo, (logo_x, logo_y), logo)

    # –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑ –Ω–∞–∑–≤–æ—é –ø—Ä—ñ–∑–≤–∏—â–µ+—ñ–º'—è+id.png
    image_filename = f"{last_name}_{first_name}_{user_id}.png"
    image_path = os.path.join(os.getcwd(), "qr_code_photos", image_filename)
    new_image.save(image_path)

    return image_path

# –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∑–æ–±—Ä–∞–∂–µ–Ω—å –¥–ª—è –≤—Å—ñ—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
def generate_images():
    # –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
    user_data = load_user_data()

    # –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    for user in user_data:
        generate_qr_code(user["id"], user["first_name"], user["last_name"])

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    while True:
        try:
            bot.polling(none_stop=True)
        except Exception as e:
            print(e)
            time.sleep(15)